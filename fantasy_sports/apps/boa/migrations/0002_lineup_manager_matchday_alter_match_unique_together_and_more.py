# Generated by Django 4.0.1 on 2022-01-16 14:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('boa', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LineUp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('points', models.FloatField(default=0)),
                ('budget', models.FloatField(default=0)),
                ('icon', models.TextField(default='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MatchDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tournament_round', models.CharField(choices=[('128', 'Round of 128'), ('64', 'Round of 64'), ('32', 'Round of 32'), ('16', 'Round of 16'), ('8', 'Quarter-Finals'), ('4', 'Semi-Finals'), ('2', 'Finals')], max_length=10)),
                ('name', models.TextField(default='')),
                ('is_active', models.BooleanField(default=False)),
                ('is_booked', models.BooleanField(default=False)),
                ('start_date', models.DateTimeField(default=None, null=True)),
                ('end_date', models.DateTimeField(default=None, null=True)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='match',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='league',
            name='max_injured_players_per_team',
        ),
        migrations.RemoveField(
            model_name='team',
            name='budget',
        ),
        migrations.RemoveField(
            model_name='team',
            name='date_created',
        ),
        migrations.RemoveField(
            model_name='team',
            name='league',
        ),
        migrations.RemoveField(
            model_name='team',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='team',
            name='points',
        ),
        migrations.AddField(
            model_name='match',
            name='liquipedia',
            field=models.TextField(default=''),
        ),
        migrations.AddField(
            model_name='match',
            name='number_games',
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AddField(
            model_name='match',
            name='team1',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='team1', to='boa.team'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='match',
            name='team2',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='team2', to='boa.team'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='player',
            name='aoe2net',
            field=models.TextField(default=''),
        ),
        migrations.AddField(
            model_name='player',
            name='def_price',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='player',
            name='icon',
            field=models.TextField(default=''),
        ),
        migrations.AddField(
            model_name='player',
            name='liquipedia',
            field=models.TextField(default=''),
        ),
        migrations.AddField(
            model_name='team',
            name='icon',
            field=models.TextField(default=''),
        ),
        migrations.AddField(
            model_name='team',
            name='liquipedia',
            field=models.TextField(default=''),
        ),
        migrations.AlterField(
            model_name='league',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='league',
            name='max_players_per_team',
            field=models.PositiveIntegerField(default=4),
        ),
        migrations.AlterField(
            model_name='league',
            name='point_for_mvp',
            field=models.FloatField(default=0.3),
        ),
        migrations.AlterField(
            model_name='league',
            name='points_per_match_loss',
            field=models.FloatField(default=-0.5),
        ),
        migrations.AlterField(
            model_name='league',
            name='points_per_match_win',
            field=models.FloatField(default=1),
        ),
        migrations.AlterField(
            model_name='match',
            name='date_played',
            field=models.DateTimeField(default=None, null=True),
        ),
        migrations.AlterField(
            model_name='match',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='match',
            name='score',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='match',
            name='winner',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='player',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='player',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team', to='boa.team'),
        ),
        migrations.AlterField(
            model_name='team',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='team',
            name='name',
            field=models.TextField(default=''),
        ),
        migrations.AlterUniqueTogether(
            name='match',
            unique_together={('team1', 'team2')},
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=None, null=True)),
                ('end_date', models.DateTimeField(default=None, null=True)),
                ('price', models.FloatField(default=0)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='boa.league')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player', to='boa.player')),
                ('reciever', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reciever', to='boa.manager')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to='boa.manager')),
            ],
        ),
        migrations.AddField(
            model_name='manager',
            name='league',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='boa.league'),
        ),
        migrations.AddField(
            model_name='manager',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='LineUpAdapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_line_up', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='current_line_up', to='boa.lineup')),
                ('locked_line_up', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locked_line_up', to='boa.lineup')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='boa.player')),
            ],
        ),
        migrations.AddField(
            model_name='lineup',
            name='flank1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flank1', to='boa.player'),
        ),
        migrations.AddField(
            model_name='lineup',
            name='flank2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flank2', to='boa.player'),
        ),
        migrations.AddField(
            model_name='lineup',
            name='match_day',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_day', to='boa.player'),
        ),
        migrations.AddField(
            model_name='lineup',
            name='pocket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pocket', to='boa.player'),
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('l1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='l1', to='boa.player')),
                ('l2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='l2', to='boa.player')),
                ('l3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='l3', to='boa.player')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match', to='boa.match')),
                ('mvp1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mvp1', to='boa.player')),
                ('mvp2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mvp2', to='boa.player')),
                ('w1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='w1', to='boa.player')),
                ('w2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='w2', to='boa.player')),
                ('w3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='w3', to='boa.player')),
            ],
        ),
        migrations.RemoveField(
            model_name='match',
            name='number_sets',
        ),
        migrations.RemoveField(
            model_name='match',
            name='player1',
        ),
        migrations.RemoveField(
            model_name='match',
            name='player2',
        ),
        migrations.RemoveField(
            model_name='match',
            name='tournament_round',
        ),
        migrations.AddField(
            model_name='match',
            name='match_day',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='match_day', to='boa.matchday'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='player',
            name='manager',
            field=models.ManyToManyField(to='boa.Manager'),
        ),
    ]
